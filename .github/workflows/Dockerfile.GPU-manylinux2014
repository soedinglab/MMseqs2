FROM ghcr.io/steineggerlab/build-containers:main-x86_64

WORKDIR /work
ADD . .
RUN mkdir -p /work/build && cd /work/build; \
    if [ -e "${LIBGCC}/libgomp.so" ]; then \
        mv -f -- "${LIBGCC}/libgomp.so" "${LIBGCC}/libgomp.so.disabled"; \
    fi; \
    /usr/local/bin/cmake -GNinja -DCMAKE_BUILD_TYPE=Release -DHAVE_TESTS=1 -DENABLE_WERROR=1 -DHAVE_AVX2=1 \
        -DOpenMP_C_FLAGS="-fopenmp -I${LIBGCC} -L${LIBGCC}" -DOpenMP_C_LIB_NAMES=gomp -DOpenMP_CXX_FLAGS="-fopenmp -I${LIBGCC} -L${LIBGCC}" -DOpenMP_CXX_LIB_NAMES=gomp -DOpenMP_gomp_LIBRARY="${LIBGCC}/libgomp.a" \
        -DATOMIC_LIB_OVERRIDE="${LIBGCC}/libatomic.a" \
        -DCMAKE_POLICY_DEFAULT_CMP0074=NEW -DCMAKE_POLICY_DEFAULT_CMP0144=NEW \
        -DZLIB_ROOT=/deps -DBZIP2_ROOT=/deps \
        -DFORCE_STATIC_DEPS=1 -DENABLE_CUDA=1 -DCMAKE_CUDA_ARCHITECTURES="75-real;80-real;86-real;89-real;90" ..; \
    cmake --build . -j$(nproc --all) -v;

RUN if ldd /work/build/src/mmseqs | grep -P -v "linux-vdso.so|/lib64/(ld-linux-x86-64|libc|libm|libdl|librt|libpthread|libutil).so" | grep -q .; then \
        echo "Error: unwanted libraries found"; \
        ldd /work/build/src/mmseqs; \
        exit 1; \
    fi; \
    if readelf -Ws /work/build/src/mmseqs | grep -q GLIBC_PRIVATE; then \
        echo "Error: binary contains private glibc symbols"; \
        readelf -Ws /work/build/src/mmseqs; \
        exit 1; \
    fi; \
    LIBC_V=$(readelf -V /work/build/src/mmseqs | awk '$3 ~ /^GLIBC_/ { print $3 }' | sort -V | tail -n1); \
    if [[ "$LIBC_V" > "GLIBC_2.17" ]]; then \
        echo "Error: glibc too new"; \
        readelf -V /work/build/src/mmseqs; \
        exit 1; \
    fi;
